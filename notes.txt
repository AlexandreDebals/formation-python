Module personnalisé, exemple: tools
Module natif (core, built-in), exemple: random, platform, os
Module communautaire: pypi.org

pip: gestionnaire de packages
pip install [moduleName]


Langage procédural: C
Langage orienté objet: Java, C++
Langage multi-paradigme: procédural, oo - Python, JavaScript, PHP (OO, depuis 5.3)

POO => création des classes (classifier/organiser)

Classe => objets
Classe: plan de construction

Classe Student




M1 <=> M2

HTTP (protocole de comm, haut niveau - 7)

Serveur HTTP (Serveur Web) <=> Client HTTP

Apache <=> Chrome

Méthodes HTTP : GET, POST

METHOD URL
GET https://pypi.org/project/requests/

Request
  URL
  Method
  Headers
  (Body)

Response
  Status Code: 200, 404, 301, 401
  Headers
  Body

Webdev
  Front (end): HTML, CSS, JavaScript (react, angular, vuejs)
  Back (end): Java, PHP, Python, JavaScript
  Full-Stack: Front + Back